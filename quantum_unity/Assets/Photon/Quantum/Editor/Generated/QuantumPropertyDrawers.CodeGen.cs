// <auto-generated>
// This code was auto-generated by a tool, every time
// the tool executes this code will be reset.
// </auto-generated>

namespace Quantum.Editor {
  using Quantum;
  using UnityEngine;
  using UnityEditor;

  [CustomPropertyDrawer(typeof(AssetRefBulletData))]
  public class AssetRefBulletDataPropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(BulletDataAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefGameControllerData))]
  public class AssetRefGameControllerDataPropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(GameControllerDataAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefMoveData))]
  public class AssetRefMoveDataPropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(MoveDataAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefShootingData))]
  public class AssetRefShootingDataPropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(ShootingDataAsset));
    }
  }

  [CustomPropertyDrawer(typeof(AssetRefStatusData))]
  public class AssetRefStatusDataPropertyDrawer : PropertyDrawer {
    public override void OnGUI(Rect position, SerializedProperty property, GUIContent label) {
      AssetRefDrawer.DrawAssetRefSelector(position, property, label, typeof(StatusDataAsset));
    }
  }

  [CustomPropertyDrawer(typeof(Quantum.Prototypes.GameState_Prototype))]
  [CustomPropertyDrawer(typeof(Quantum.Prototypes.InputButtons_Prototype))]
  partial class PrototypeDrawer {}
}
